/******************************************************************
cosmetics.h - Contains "blinkLED()", "jukebox()" and "display()"
******************************************************************/

#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#ifndef COSMETICS_H
#define COSMETICS_H

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define SCREEN_ADDRESS 0x3C
#define SDA_PIN 17  // Your custom SDA pin
#define SCL_PIN 18  // Your custom SCL pin


// Sarif Logo Bitmap Image
static const uint8_t image_data_Sarif[] = {
        0xf7, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x81, 0xe1, 0xf9, 0xf9,
        0xe1, 0xe1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x01, 0x01, 0x01, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xe0, 0xe0, 0xf8, 0xfc, 0xfe,
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfe, 0xf0, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
        0x80, 0xc0, 0xc0, 0xe0, 0xe0, 0xe0, 0xf0, 0xf8, 0xf8, 0xfc, 0xfe, 0xfe, 0xff, 0xff, 0xff, 0xff,
        0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x3f, 0x3f, 0x1f, 0x0f, 0x0f, 0x03, 0x01, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xc0, 0xc0,
        0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xf0, 0xf0, 0xf8, 0xf8, 0x78, 0x78, 0x7c, 0x7c, 0x3c, 0x7e, 0x7e,
        0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x1f, 0x3f, 0x3f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x0f, 0x0f,
        0x07, 0x07, 0x07, 0x07, 0x07, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
        0xff, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0xe7, 0xef,
        0xdf, 0xdf, 0xdf, 0xff, 0xff, 0xff, 0xf3, 0xc0, 0xe0, 0xe0, 0xf0, 0xfc, 0x3e, 0xbf, 0xbf, 0xbe,
        0x7c, 0xf8, 0xf0, 0xe0, 0xc0, 0xc0, 0xc6, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xfe,
        0xec, 0xe0, 0xe0, 0xc0, 0xc2, 0xff, 0xff, 0xff, 0xff, 0xc6, 0x80, 0x80, 0xc6, 0xff, 0xff, 0xff,
        0xff, 0xdf, 0x9f, 0xbf, 0x1f, 0x86, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x80, 0x80, 0x80,
        0x80, 0x80, 0x80, 0xff, 0xff, 0x8f, 0x8f, 0x8f, 0x89, 0x88, 0x88, 0x8f, 0x8f, 0x8f, 0x8f, 0x87,
        0x8e, 0x8d, 0x8f, 0x8f, 0x8f, 0x80, 0x89, 0x8f, 0x8f, 0x8f, 0x8b, 0x8b, 0x8f, 0x8f, 0x8f, 0x8f,
        0x87, 0x8f, 0x8f, 0x8f, 0x8d, 0x88, 0x88, 0x8f, 0x8f, 0x8f, 0x81, 0x8f, 0x8f, 0x8f, 0x8f, 0x8f,
        0x8f, 0x83, 0x83, 0x83, 0x8b, 0x8f, 0x8f, 0x8f, 0x83, 0x83, 0x83, 0x8f, 0x8f, 0x8f, 0x8f, 0x8f,
        0x8f, 0x8f, 0x8e, 0x88, 0x89, 0x8f, 0x8f, 0x8f, 0x80, 0x89, 0x8f, 0x8f, 0x8f, 0x8f, 0x8f, 0x8f,
        0x80, 0x8f, 0x8f, 0x8f, 0x8f, 0x8f, 0x8f, 0xff};


class Cosmetics{
    public:

        // LED Blink Function
        void blinkLED(int times){
            for (int i = 0; i < times; i++){
                digitalWrite(LED_BUILTIN, HIGH); // Turn the LED on
                delay(50);                      // Wait for 0.3 seconds
                digitalWrite(LED_BUILTIN, LOW);  // Turn the LED off
                delay(50);                      // Wait for 0.3 seconds
            }
        }

        // Piezo Buzzer Jukebox Function
        void jukebox(int index){
            // To be developed at INNOVATION STAGE!
        }

        // OLED Display Sarif Logo Function
        void displayLogo(){
            Wire.begin(SDA_PIN, SCL_PIN);   // Set SDA and SCL Pins
            Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);   // Declare display object

            if(!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {  // Check for connection
                Serial.println(F("SSD1306 allocation failed"));
                for(;;);
            }

            display.clearDisplay();  // Clear buffer
            display.drawBitmap(0, 0, image_data_Sarif, 128, 64, 1);  // Draw Sarif Logo Bitmap
            display.display();  // Display
        }

        // OLED Generic taximeter stats display
        void displayStats(int journeyTime, float fare){
            Wire.begin(SDA_PIN, SCL_PIN);   // Set SDA and SCL Pins
            Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);   // Declare display object

            if(!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {  // Check for connection
                Serial.println(F("SSD1306 allocation failed"));
                for(;;);
            }

            display.clearDisplay();            // Clear buffer
            display.setTextSize(2);            // Set text size
            display.setTextColor(WHITE);       // Set text color
            display.setCursor(5, 5);           // Define position
            display.println("Journey Time: "); // Display Journey Time
            display.print(journeyTime);
            display.print("s");

            display.setCursor(5, 25);          // Redefine position
            display.println("Fare: €");        // Display Fare
            display.print(fare);

            display.display();      // Display on screen
        }
};

#endif // COSMETICS_H
